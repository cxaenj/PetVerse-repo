-- Fix sales table for POS system compatibility
-- This script will drop the existing sales table and recreate it with the correct structure

-- First, drop the existing tables (if they exist)
-- Note: This will delete any existing sales data
DROP TABLE IF EXISTS public.sale_items CASCADE;
DROP TABLE IF EXISTS public.sales CASCADE;

-- Create the new sales table compatible with the POS system
CREATE TABLE public.sales (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    transaction_time TIMESTAMP WITH TIME ZONE NULL,
    items JSONB NULL, -- To store an array of sold items with their details
    subtotal NUMERIC NULL,
    discount_applied NUMERIC NULL,
    final_total NUMERIC NULL,
    payment_method TEXT NULL, -- Optional: e.g., 'cash', 'card'
    customer_id UUID NULL, -- Optional: if you have a customers table
    notes TEXT NULL, -- Optional: any notes for the sale
    CONSTRAINT sales_pkey PRIMARY KEY (id)
);

-- Enable Row Level Security (RLS)
ALTER TABLE public.sales ENABLE ROW LEVEL SECURITY;

-- Policy: Allow public anonymous access to insert sales
CREATE POLICY "Allow public insert access for anon key" ON public.sales
  FOR INSERT
  TO anon
  WITH CHECK (TRUE);

-- Policy: Allow public anonymous access to select sales (if needed)
CREATE POLICY "Allow public select access for anon key" ON public.sales
  FOR SELECT
  TO anon
  USING (TRUE);

-- Grant usage on schema public to anon and authenticated roles
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;

-- Grant insert, select permissions on the sales table to anon role
GRANT INSERT ON TABLE public.sales TO anon;
GRANT SELECT ON TABLE public.sales TO anon;

-- Grant insert, select permissions on the sales table to authenticated role
GRANT INSERT ON TABLE public.sales TO authenticated;
GRANT SELECT ON TABLE public.sales TO authenticated;

-- Grant all permissions to the postgres role (superuser) and service_role (backend operations)
GRANT ALL ON TABLE public.sales TO postgres;
GRANT ALL ON TABLE public.sales TO service_role;

-- Create an index for better performance on transaction_time
CREATE INDEX idx_sales_transaction_time ON public.sales(transaction_time);

-- Output a success message
SELECT 'Sales table has been recreated and configured successfully for POS system.' as result;
